---
- name: Converge
  hosts: all
  become: true
  vars:
    nginx_http_params:
      - "log_format main '[$time_local] $remote_addr - $http_x_forwarded_for - $remote_user $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_original_host $http_x_forwarded_port $http_x_forwarded_proto'"
      - "add_header X-Backend-Server $hostname"
    nginx_vhost_host: "site.example.com"
    nginx_vhost_php: true
    nginx_max_upload_size: "10M"
    nginx_server_names_hash_bucket_size: 128
    nginx_vhost:
      servers:
        - server_name: site.example.com
          aliases: [ 'www.site.example.com' ]
          port: 443
          error_log: true
          access_log: true
          ssl: true
          ssl_cert: /etc/ssl/site.example.com.crt
          ssl_key: /etc/ssl/site.example.com.key
          web_root: /var/www/html
          locations:
            - path: /nginx_status
              content: |
                stub_status on;
                access_log  off;
                allow 127.0.0.1;
                deny all;
            - path: /
              content: |
                try_files $uri /app.php$is_args$args;
            - path: "~ ^/(app|app_dev|app_smoke|app_test|microtime|config)\\.php(/|$)"
              content: |
                fastcgi_pass unix:/run/php/php7.2-fpm.sock;
                fastcgi_split_path_info ^(.+\.php)(/.*)$;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param SCRIPT_NAME $fastcgi_script_name;
                fastcgi_param HTTPS off;
                fastcgi_buffer_size 128k;
                fastcgi_buffers 256 4k;
                fastcgi_busy_buffers_size 256k;
                fastcgi_temp_file_write_size 256k;
                fastcgi_read_timeout 240;
                fastcgi_intercept_errors on;
        - server_name: site.example.com
          port: 80
          error_log: false
          access_log: false
          locations:
            - path: "~ ^.*$"
              content: |
                return 301 https://$server_name$request_uri;
  pre_tasks:
    - name: Generate SSL certificate
      command: |
        openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/site.example.com.key \
          -out /etc/ssl/site.example.com.crt \
          -subj "/C=US/ST=New York/L=New York/O=Test Organization/OU=Unit/CN=site.example.com/emailAddress=sysadmin@example.com"
      args:
        creates: /etc/ssl/site.example.com.crt
      become: true

  roles:
    - role: ansible-role-nginx_vhost
